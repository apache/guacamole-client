/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package org.apache.guacamole.auth.duo;

import org.apache.guacamole.net.auth.AuthenticationSession;

/**
 * An AuthenticationSession that stores the information required for an
 * in-progress Duo authentication attempt.
 */
public class DuoAuthenticationSession extends AuthenticationSession {
    
    /**
     * The session state generated by the Duo client, which is used to track
     * the session through the redirect and return process.
     */
    private final String state;
    
    /**
     * The username of the user who is authenticating with this session.
     */
    private final String username;
    
    /**
     * Create a new instance of this authenticaiton session, having the given length of time
     * for expriation and the state generated by the Duo Client.
     * 
     * @param expires
     *     The number of milliseconds before this session is invalid.
     * 
     * @param state 
     *     The session state, as generated by the Duo Client.
     * 
     * @param username
     *     The username of the user who is attempting authentication with Duo.
     */
    public DuoAuthenticationSession(long expires, String state, String username) {
        super(expires);
        this.state = state;
        this.username = username;
    }
    
    /**
     * Return the stored session state.
     * 
     * @return 
     *     The stored session state.
     */
    public String getState() {
        return state;
    }
    
    public String getUsername() {
        return username;
    }
    
}
